---
# Agent queue
queueName: default

# Job expansion
matrix:
  - buildConfiguration: release
    buildPlatform: any cpu

# Restore
restoreSolution: "s/**/*.sln"
restoreNuGetVersion: 3.3.0

# Build
buildSolution: "s/**/*.sln"
buildArguments: ""
buildClean: false
buildVSVersion: 15.0

# Test
testPattern:
  - "**/*test*.dll"
  - "!**/obj/**"
testRoot: s

# Symbols
symbolsPattern: "**/bin/**/*.pdb"
symbolsRoot: s
symbolsStore: ""
symbolsSkipIndex: false
symbolsWarnIfNotIndexed: false

# Stage and publish drop
copyPattern:
  - "**"
copyRoot: s
dropStagingPath: "$(Build.ArtifactStagingDirectory)"
dropArtifactName: "drop-$(BuildConfiguration)-$(BuildPlatform)"
dropType: Container # Container or FilePath
dropPath: "" # Only required if FilePath

# Additional job variables
additionalVariables: {}
---

# Self repo
resources:
  - name: s
    type: self

jobs:
  {{#matrix}}
  - name: "build-{{buildConfiguration}}-{{buildPlatform}}"
    target: 
      type: queue
      name: "{{queueName}}"
    variables:
      BuildConfiguration: "{{buildConfiguration}}"
      BuildPlatform: "{{buildPlatform}}"
      {{#each @root.additionalVariables}}
      {{@key}}: "{{this}}"
      {{/each}}
    steps:
      - hook: preRestore
      - hook: restore
        steps:
          - task: NuGetInstaller@0.*
            inputs:
              solution: "{{@root.restoreSolution}}"
              restoreMode: restore
              nuGetVersion: "{{@root.restoreNuGetVersion}}"
      - hook: postRestore
      - hook: preBuild
      - hook: build
        steps:
          - task: VSBuild@1.*
            inputs:
              solution: "{{@root.buildSolution}}"
              msbuildArgs: "{{@root.buildArguments}}"
              configuration: "{{buildConfiguration}}"
              platform: "{{buildPlatform}}"
              clean: "{{@root.buildClean}}"
              vsVersion: "{{@root.buildVSVersion}}"
              msbuildArchitecture: x86
              logProjectEvents: false
              createLogFile: false
      - hook: postBuild
      - hook: preTest
      - hook: test
        steps:
          - task: VSTest
            inputs:
              testAssemblyVer2: "{{#each @root.testPattern}}{{#unless @first}}\n{{/unless}}{{this}}{{/each}}"
              searchFolder: "{{@root.testRoot}}"
              configuration: "{{buildConfiguration}}"
              platform: "{{buildPlatform}}"
      - hook: postTest
      - hook: preSymbols
      - hook: symbols
        steps:
          - task: PublishSymbols@1.*
            inputs:
              SearchPattern: "{{@root.symbolsPattern}}"
              SymbolsFolder: "{{@root.symbolsRoot}}"
              SymbolsPath: "{{@root.symbolsStore}}"
              SkipIndexing: "{{@root.symbolsSkipIndex}}"
              TreatNotIndexedAsWarning: "{{@root.symbolsWarnIfNotIndexed}}"
              SymbolsArtifactName: "Symbols_{{buildConfiguration}}_{{buildPlatform}}"
      - hook: postSymbols
      - hook: preDrop
      - hook: drop
        steps:
          - task: CopyFiles@2.*
            inputs:
              Contents: "{{#each @root.copyPattern}}{{#unless @first}}\n{{/unless}}{{this}}{{/each}}"
              SourceFolder: "{{@root.copyRoot}}"
              TargetFolder: "{{@root.dropStagingPath}}"
          - task: PublishBuildArtifacts@1.*
            inputs:
              PathtoPublish: "{{@root.dropStagingPath}}"
              ArtifactName: "{{@root.dropArtifactName}}"
              ArtifactType: "{{@root.dropType}}"
              TargetPath: "{{@root.dropPath}}"
      - hook: postDrop
  {{/matrix}}